name: modflow
channels:
  - conda-forge
  - nodefaults # Speeds solving env, by limiting the number of options

dependencies:
  - python =3.11

  # Modflow Packages
  - modflow6
  - modflowapi # installs bmipy & xmipy
  - modflow-devtools #
  - flopy
  # flopy optional dependencies
  #   https://flopy.readthedocs.io/en/stable/md/optional_dependencies.html
  - pyshp
  - netcdf4
  - rasterio # + affine
  - scipy
  - pyproj
  - shapely
  - descartes
  - rasterstats # + gdal, etc.
  - defusedxml
  - geojson
  # - pyvista # interface for Visualization Toolkit (VTK)

  # Other Modeling Packages
  - phreeqcrm

  # PyData packages not included above
  - geopandas
  - xarray
  - h5py

  # Visualization (optional)
  - hvplot  # hvPlot installs most HoloViz libs, https://holoviz.org
  - geoviews

  # Interactivity via Jupyter Notebooks
  - jupyterlab
  - nodejs  # required for many extensions
  - ipympl  # jupyter-matplotlib, https://github.com/matplotlib/ipympl
  - ipywidgets  # Interactive HTML widgets for Jupyter
  - ipywidgets_bokeh
  - jupyter_bokeh >=4.0.1 # Renders Holviz / Bokeh objects in Jupyter
  - pyviz_comms # bidirectional communication between Python & JavaScript for Jupyter

  # Dev tools: Language Server Protocol (LSP) (Optional), for...
    # code navigation + hover suggestions + linters + autocompletion + rename
  - python-lsp-server >=1.6 # LSP extension for Python (pylsp), including:
    # Rope for Completions and renaming
    # Pyflakes linter to detect various errors
    # McCabe linter for complexity checking
    # pycodestyle linter for style checking
    # pydocstyle linter for docstring style checking (disabled by default)
    # autopep8 for code formatting
    # YAPF for code formatting (preferred over autopep8)
    # flake8 for error checking (disabled by default)
    # pylint for code linting (disabled by default)
  - pylsp-mypy  # MyPy type checking for Python >=3.7.
  - fortls  # Fortran LSP, for model input files
  - jupyterlab-lsp # Provides both server extension and lab extension

  # environment and package management
  - conda
  - conda-build
  - conda-libmamba-solver  # Faster env solver, https://conda.github.io/conda-libmamba-solver/
  - pip
  - git  # for pip installing directly from GitHub
  # PIP install requirements only if it is not  possible with conda
  - pip:
    # - 
  